// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NTRST.DB.Tracks;

#nullable disable

namespace NTRST.DB.Tracks.Migrations
{
    [DbContext(typeof(TracksDbContext))]
    [Migration("20250602180958_AuthenticationInitialization")]
    partial class AuthenticationInitialization
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("tracks")
                .HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("NTRST.Models.Tracks.RecentlyPlayed", b =>
                {
                    b.Property<DateTime>("PlayedAt")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("TrackCalculatedId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("PlayedAt", "UserId");

                    b.HasIndex("TrackCalculatedId");

                    b.ToTable("RecentlyPlayed", "tracks");
                });

            modelBuilder.Entity("NTRST.Models.Tracks.Track", b =>
                {
                    b.Property<string>("CalculatedId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Artist")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ExternalArtistId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ExternalId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.PrimitiveCollection<string>("Genres")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("CalculatedId");

                    b.ToTable("Tracks", "tracks");
                });

            modelBuilder.Entity("NTRST.Models.Tracks.RecentlyPlayed", b =>
                {
                    b.HasOne("NTRST.Models.Tracks.Track", "Track")
                        .WithMany()
                        .HasForeignKey("TrackCalculatedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Track");
                });
#pragma warning restore 612, 618
        }
    }
}
